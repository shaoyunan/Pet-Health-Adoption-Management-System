/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PetOwner.PetHealth;

import Business.UserAccount.PetOwnerUserAccount;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Appointment;
import Business.WorkQueue.Appointment.Availibility;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class AppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApointmentJPanel
     */
    JPanel jp;
    UserAccount da;
    PetOwnerUserAccount ma;
    SimpleDateFormat hourformat = new SimpleDateFormat("HH:mm");
    SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
//        Calendar calendar = Calendar.getInstance();  

    public AppointmentJPanel(JPanel jp,
            UserAccount ad,
            PetOwnerUserAccount a) {
        initComponents();
        this.jp = jp;
        this.ma = a;
        this.da = ad;
        populate();
    }

    public void populate() {

//  
//    try  
//    {      
// 
//    }  
//    catch (ParseException e)  
//    {  
//      e.printStackTrace();  
//    }  
        box1.removeAllItems();

        box1.addItem(2017);
        box1.addItem(2018);

        box1.setSelectedItem(null);
        box2.setSelectedItem(null);
        box3.setSelectedItem(null);
    }

    public void populateTable() {
        if (box1.getSelectedItem() != null && box2.getSelectedItem() != null && box3.getSelectedItem() != null) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            Calendar calendar = Calendar.getInstance();
            int year1 = (int) box1.getSelectedItem();
            int month1 = (int) box2.getSelectedItem();
            int day1 = (int) box3.getSelectedItem();
            calendar.set(year1, month1 - 1, day1);
            Date sd = new Date();

            calendar.set(Calendar.HOUR_OF_DAY, 8);
            calendar.set(Calendar.MINUTE, 30);
            calendar.set(Calendar.SECOND, 0);
            for (int i = 0; i < 4; i++) {
                Object row[] = new Object[3];
                sd = calendar.getTime();
                Date ed = new Date(calendar.getTimeInMillis() + (long) 1.5 * 60 * 60 * 1000);
                row[0] = hourformat.format(sd);
                row[1] = hourformat.format(ed);
                if (da.getAl().findAppointment(sd, ed)) {
                    row[2] = Availibility.Busy;
                } else {
                    row[2] = Availibility.Free;
                }
                dtm.addRow(row);
                calendar.add(Calendar.HOUR_OF_DAY, 2);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please choose complete date");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        box1 = new javax.swing.JComboBox();
        box2 = new javax.swing.JComboBox();
        box3 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        box1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1ActionPerformed(evt);
            }
        });

        box2.setEnabled(false);
        box2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2ActionPerformed(evt);
            }
        });

        box3.setEnabled(false);
        box3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StartTime", "EndTime", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Manage Appointment");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(box1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(box2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(box3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)))
                        .addGap(0, 222, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(76, 76, 76)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void box1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1ActionPerformed
        box2.setEnabled(true);
        box2.removeAllItems();
        for (int i = 1; i <= 12; i++) {
            box2.addItem(i);
        }
        box2.setSelectedItem(null);

        // TODO add your handling code here:
    }//GEN-LAST:event_box1ActionPerformed

    private void box2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box2ActionPerformed
        if (box2.getSelectedItem() != null) {
            box3.removeAllItems();
            int n = (int) box2.getSelectedItem();
            if (n == 1 || n == 3 || n == 5 || n == 7 || n == 8 || n == 10 || n == 12) {
                for (int i = 1; i <= 31; i++) {
                    box3.addItem(i);
                }
            } else if (n == 2) {
                for (int i = 1; i <= 28; i++) {
                    box3.addItem(i);
                }
            } else {
                for (int i = 1; i <= 30; i++) {
                    box3.addItem(i);
                }
            }
            box3.setSelectedItem(null);
            box3.setEnabled(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_box2ActionPerformed

    private void box3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int srow = jTable1.getSelectedRow();
        if (srow >= 0) {
            Availibility a1 = (Availibility) jTable1.getValueAt(srow, 2);
            if (a1.getSt().equals(Availibility.Busy.getSt())) {
                JOptionPane.showMessageDialog(null, "The time is not availible!");
            } else {
                int year = (int) box1.getSelectedItem();
                int month = (int) box2.getSelectedItem();
                int day = (int) box3.getSelectedItem();
                String startt = (String) jTable1.getValueAt(srow, 0);
                String endt = (String) jTable1.getValueAt(srow, 1);
                Calendar stc = Calendar.getInstance();
                Calendar etc = Calendar.getInstance();
                Date st1 = new Date();
                Date et1 = new Date();
                try {
                    st1 = hourformat.parse(startt);
                    et1 = hourformat.parse(endt);
                } catch (ParseException ex) {
                    Logger.getLogger(AppointmentJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                etc.set(year, month - 1, day, et1.getHours(), et1.getMinutes(), 0);
                stc.set(year, month - 1, day, st1.getHours(), st1.getMinutes(), 0);
                Date et = etc.getTime();
                Date st = stc.getTime();
                if (et.compareTo(new Date()) >= 0) {
                    Appointment a = da.getAl().AddAppointment();
                    a.setAvail(Availibility.Busy);
                    a.setDa(da);
                    a.setStarttime(st);
                    a.setMa(ma);
                    a.setEndtime(et);
                    ma.getAl().getAl().add(a);
                    JOptionPane.showMessageDialog(null, "Done!");
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    while (model.getRowCount() > 0) {
                        model.removeRow(model.getRowCount() - 1);
                    }
                    box2.setSelectedItem(null);
                    box2.setEnabled(false);
                    box3.setSelectedItem(null);
                    box3.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "The time is out of date");
                }
                box2.setSelectedItem(null);
                box2.setEnabled(false);
                box3.setSelectedItem(null);
                box3.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please choose a time zone!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jp.remove(this);
        Component[] componentArray = jp.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ChooseDoctorJPanel pp = (ChooseDoctorJPanel) component;
        pp.populate();
        CardLayout layout = (CardLayout) jp.getLayout();
        layout.previous(jp);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        populateTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox box1;
    private javax.swing.JComboBox box2;
    private javax.swing.JComboBox box3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
