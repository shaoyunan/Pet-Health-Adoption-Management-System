/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Employee.Adoption;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.HealthCareOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utilities;
import Business.WorkQueue.Adoption.AdoptionRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.WorkQueue.WorkRequest.Status;
import javax.swing.JOptionPane;

/**
 *
 * @author shaoy
 */
public class ManageAdoptionRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAdoptionRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    private HealthCareOrganization org;

    public ManageAdoptionRequestJPanel(JPanel userProcessContainer, EcoSystem business, Enterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        this.org = (HealthCareOrganization) organization;
        popTable();
    }

    public void popTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRequest.getModel();
        dtm.setRowCount(0);

        for (AdoptionRequest ar : org.getAdoptionRequestQueue().getAdoptionRequestList()) {
            if (ar.getStatus().equals(Status.Pending.getValue())) {
                Object row[] = new Object[5];
                row[0] = ar;
                row[1] = ar.getPet();
                row[2] = ar.getSender();
                row[3] = Utilities.dateToString(ar.getRequestDate());
                row[4] = ar.getStatus();
                dtm.addRow(row);
            }
        }
        for (AdoptionRequest ar : org.getAdoptionRequestQueue().getAdoptionRequestList()) {
            if (ar.getStatus().equals(Status.Finished.getValue())) {
                Object row[] = new Object[5];
                row[0] = ar;
                row[1] = ar.getPet();
                row[2] = ar.getSender();
                row[3] = Utilities.dateToString(ar.getRequestDate());
                row[4] = ar.getStatus();
                dtm.addRow(row);
            }
        }
        for (AdoptionRequest ar : org.getAdoptionRequestQueue().getAdoptionRequestList()) {
            if (ar.getStatus().equals(Status.Declined.getValue())) {
                Object row[] = new Object[5];
                row[0] = ar;
                row[1] = ar.getPet();
                row[2] = ar.getSender();
                row[3] = Utilities.dateToString(ar.getRequestDate());
                row[4] = ar.getStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnView = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Manage Adoption Request");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Animal", "User", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 259, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(255, 255, 255))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnView))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int srow = tblRequest.getSelectedRow();
        if (srow >= 0) {
            AdoptionRequest adoptionRequest = (AdoptionRequest) tblRequest.getValueAt(srow, 0);
            ProcessAdoptionRequestJPanel processAdoptionRequestJPanel = new ProcessAdoptionRequestJPanel(userProcessContainer, business, enterprise, organization, account, adoptionRequest);
            if(!adoptionRequest.getStatus().equals(Status.Pending.getValue())){
                processAdoptionRequestJPanel.disableInput();
            }
            userProcessContainer.add("processAdoptionRequestJPanel", processAdoptionRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
