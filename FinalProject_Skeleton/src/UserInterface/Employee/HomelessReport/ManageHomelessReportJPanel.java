/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Employee.HomelessReport;

import Business.EcoSystem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utilities;
import Business.WorkQueue.HomelessReport.HomelessReport;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.WorkQueue.HomelessReport.HomelessReport.Priority;
import Business.WorkQueue.WorkRequest.Status;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author shaoy
 */
public class ManageHomelessReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageHomelessReportJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private Organization organization;
    private UserAccount account;

    public ManageHomelessReportJPanel(JPanel userProcessContainer, EcoSystem business, Organization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.organization = organization;
        this.account = account;
        organization.getWorkQueue().resetPriority();
        popTable();
        //organization.getWorkQueue().getWorkRequestList().clear();
    }

    public void popTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblReport.getModel();
        dtm.setRowCount(0);
        ArrayList<HomelessReport> temp = new ArrayList<HomelessReport>();
        ArrayList<HomelessReport> temp1 = new ArrayList<HomelessReport>();
        for (WorkRequest r : organization.getWorkQueue().getWorkRequestList()) {
            if (r instanceof HomelessReport) {
                HomelessReport hr = (HomelessReport) r;
                if (hr.getStatus().equals(Status.Pending.getValue())) {
                    if (hr.getPriority().equals(Priority.High)) {
                        Object row[] = new Object[4];
                        row[0] = hr;
                        row[1] = hr.getPriority();
                        row[2] = Utilities.dateToString(hr.getRequestDate());
                        row[3] = hr.getStatus();
                        dtm.addRow(row);
                    } else if(hr.getPriority().equals(Priority.Normal)){
                        temp1.add(hr);
                    }else{
                        temp.add(hr);
                    }
                } else {
                    temp.add(hr);
                }
            }
        }
        for (HomelessReport hr1 : temp1) {
            Object row[] = new Object[4];
            row[0] = hr1;
            row[1] = hr1.getPriority();
            row[2] = Utilities.dateToString(hr1.getRequestDate());
            row[3] = hr1.getStatus();
            dtm.addRow(row);
        }
        for (HomelessReport hr1 : temp) {
            Object row[] = new Object[4];
            row[0] = hr1;
            row[1] = hr1.getPriority();
            row[2] = Utilities.dateToString(hr1.getRequestDate());
            row[3] = hr1.getStatus();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnMap = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProcess = new javax.swing.JButton();

        tblReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report", "Priority", "Report Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReport);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnMap.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        btnMap.setText("Map");
        btnMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMapActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Homeless Animal Report");

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcess))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 268, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(189, 189, 189)
                        .addComponent(btnMap)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMap)
                    .addComponent(jLabel1))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnProcess))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMapActionPerformed
        // TODO add your handling code here:
        ShowMapJPanel showHomelessReportMapJPanel = new ShowMapJPanel(userProcessContainer, organization, account);
        userProcessContainer.add("showHomelessReportMapJPanel", showHomelessReportMapJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnMapActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblReport.getSelectedRow();
        if (selectedRow >= 0) {
            HomelessReport hr = (HomelessReport) tblReport.getValueAt(selectedRow, 0);
            ProcessHomelessReportJPanel processHomelessReportJPanel = new ProcessHomelessReportJPanel(userProcessContainer, organization, account, hr);
            userProcessContainer.add("processHomelessReportJPanel", processHomelessReportJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Select a row!");
        }
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMap;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReport;
    // End of variables declaration//GEN-END:variables
}
